{"fopen":{"description":"file open","body":["FILE *fp = fopen(${1:filename}, ${2:\"r+\"});","if (fp == NULL) {","\tperror(\"fopen\");","\texit(1);","}","fclose(fp);"],"prefix":"fopen"},"perf_counter":{"description":"stop watch","body":["#define BILLION 1000000000L","","struct timespec start, end;","clock_gettime(CLOCK_MONOTONIC, &start);","","$1","","clock_gettime(CLOCK_MONOTONIC, &end);","int64_t elapsed_ns = (end.tv_sec - start.tv_sec) * BILLION + (end.tv_nsec - start.tv_nsec);"],"prefix":"perf_counter"},"mmap":{"description":"mmap","body":["void *data = mmap(NULL, ${1:len}, PROT_READ, MAP_PRIVATE, ${2:fd}, 0);","if (data == MAP_FAILED) {","\tperror(\"mmap\");","\texit(1);","}","munmap(data, $1);"],"prefix":"mmap"},"stat":{"description":"stat","body":["struct stat file_info;","if (stat(${1:path}, &file_info) != 0) {","    perror(\"stat\");","}","if (S_ISREG(file_info.st_mode)) {","    // ...","}"],"prefix":"stat"},"getopt":{"description":"getopt","body":["#include <getopt.h>","","int opt;","while ((opt = getopt(argc, argv, \"$1\")) != -1) {","    switch (opt) {","\tcase '$2':","\t\t$3","\t}","}"],"prefix":"getopt"},"cunit":{"description":"scaffold cunit","body":["#include <CUnit/Basic.h>","","#define len(array) sizeof(array) / sizeof(array[0])","#define TEST_CASE(test_func) { .name = #test_func, .func = test_func }","","typedef struct {","  char *name;","  CU_TestFunc func;","} TestCase;","","TestCase tests[] = {","  TEST_CASE(some_test_function),","};","","int main(int argc, char **argv)","{","  CU_pSuite suite;","  CU_initialize_registry();","","  suite = CU_add_suite(\"$1\", NULL, NULL);","  for (int i=0; i<len(tests); i++) {","    CU_add_test(suite, tests[i].name, tests[i].func);","  }","","  CU_basic_run_tests();","  CU_cleanup_registry();","","  return CU_get_error();","}"],"prefix":"cunit"},"i":{"description":"include","body":["#include <$1.h>"],"prefix":"i"},"open":{"description":"syscall open","body":["int fd = open($1, ${2:O_RDWR});","if (fd < 0) {","\tperror(\"open\");","\texit(1);","}","close(fd);"],"prefix":"open"},"va":{"description":"variadic argument","body":["#include <stdarg.h>","va_list ap;","va_start(ap, ${1:arg});","va_arg(ap, <type>);","va_end;"],"prefix":"va"},"sprintf":{"description":"secure sprintf","body":["size_t size = snprintf(NULL, 0, \"$1\", $2) + 1;","char *$3 = malloc(sizeof(char) * size);","snprintf($3, size, \"$1\", $2);"],"prefix":"sprintf"},"main":{"description":"main","body":["int main(int argc, char **argv)","{","\t$1","}"],"prefix":"main"},"i\"":{"description":"include","body":["#include \"$1.h\""],"prefix":"i\""}}
