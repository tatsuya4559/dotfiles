{
  "fn": {
    "prefix": "fn",
    "body": [
      "function! $1($2) abort",
      "\t$3",
      "endfunction"
    ]
  },
  "def": {
    "prefix": "def",
    "description": "vim9 script function",
    "body": [
      "def $1($2): $3",
      "\t$4",
      "enddef"
    ]
  },
  "utt": {
    "prefix": "utt",
    "description": "table driven test",
    "body": [
      "def Test$1(): void",
      "\tconst tests = [",
      "\t\t{input: [$2], want: $3},",
      "\t]",
      "",
      "\tfinal child = themis#suite('Test$1')",
      "\tfor tt in tests",
      "\t\tconst description = printf('$1(%s)', tt.input)",
      "\t\tchild[description] = function((input, want) => {",
      "\t\t\tconst got = call($1, input)",
      "\t\t\tassert.equals(got, want)",
      "\t\t}, [tt.input, tt.want])",
      "\tendfor",
      "enddef",
      "suite.__Test$1__ = Test$1"
    ]
  },
  "ut": {
    "prefix": "ut",
    "description": "test",
    "body": [
      "def Test$1(): void",
      "\tassert.equals(got, want)",
      "enddef",
      "suite.Test$1 = Test$1"
    ]
  }
}
