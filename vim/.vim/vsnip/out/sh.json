{
  "bash": {
    "prefix": "bash",
    "description": "bash shebang",
    "body": [
      "#!/bin/bash",
      "set -eu"
    ]
  },
  "dir": {
    "prefix": "dir",
    "description": "script dir",
    "body": [
      "SCRIPT_DIR=\"\\$(cd \"\\$(dirname \"\\$0\")\"; pwd)\""
    ]
  },
  "onexit": {
    "prefix": "onexit",
    "description": "on exit function",
    "body": [
      "function on_exit() {",
      "\t$1",
      "}",
      "",
      "trap on_exit EXIT"
    ]
  },
  "onerr": {
    "prefix": "onerr",
    "description": "on error function",
    "body": [
      "function on_error() {",
      "\t$1",
      "}",
      "",
      "trap on_error ERR"
    ]
  },
  "whileread": {
    "prefix": "whileread",
    "description": "while read",
    "body": [
      "while read -r col1 col2; do",
      "\t$1",
      "done <<EOF",
      "$2",
      "EOF"
    ]
  },
  "if": {
    "prefix": "if",
    "description": "if statement",
    "body": [
      "if [[ $1 ]]; then",
      "\t$2",
      "fi"
    ]
  },
  "case": {
    "prefix": "case",
    "description": "case statement",
    "body": [
      "case \"\\${$1}\" in",
      "\t*)",
      "\t\t$2",
      "\t\t;;",
      "esac"
    ]
  },
  "fn": {
    "prefix": "fn",
    "description": "function",
    "body": [
      "function $1() {",
      "\t$2",
      "}"
    ]
  },
  "log": {
    "prefix": "log",
    "description": "logging function",
    "body": [
      "function log() {",
      "\tlocal severity=\"\\$1\"",
      "\tlocal message=\"\\${@:2}\"",
      "\techo \"[\\${severity}] \\${message}\" 1>&2",
      "}"
    ]
  },
  "retry": {
    "prefix": "retry",
    "description": "with retry function",
    "body": [
      "function with_retry() {",
      "\tlocal -r max_retry=\"\\$1\"",
      "\tlocal -r cmd=\"\\${@:2}\"",
      "",
      "\tfor retry_count in \\$(seq 0 \\${max_retry}); do",
      "\t\tlog INFO \\${cmd} \"retry_count=\\${retry_count}\"",
      "\t\t\\${cmd} && return 0",
      "\tdone",
      "",
      "\tlog ERROR \"max retry exceeded: \\${cmd}\"",
      "\treturn 1",
      "}"
    ]
  },
  "lock": {
    "prefix": "lock",
    "description": "lock file",
    "body": [
      "# symlinkはすでに作成されている場合失敗するのでロックに使える",
      "if ! ln -s \\$\\$ ./\\$\\$.lock; then",
      "\techo locked",
      "\texit 0",
      "fi"
    ]
  },
  "confirm": {
    "prefix": "confirm",
    "description": "confirm",
    "body": [
      "read -p \"Are you sure? (y/N): \" YN",
      "if [[ \"\\${YN}\" != 'y' ]]; then",
      "\techo 'abort.' 1>&2",
      "\texit 1",
      "fi"
    ]
  },
  "opts": {
    "prefix": "opts",
    "description": "parse options",
    "body": [
      "while [[ \\$# -gt 0 ]]; do",
      "\tcase \"\\$1\" in",
      "\t\t-o | -o=*)",
      "\t\t\tif [[ \\$1 =~ ^-o= ]]; then",
      "\t\t\t\techo option o is \\${1#*=}",
      "\t\t\telse",
      "\t\t\t\techo option o is \\$2",
      "\t\t\t\tshift",
      "\t\t\tfi",
      "\t\t\t;;",
      "\t\t-h)",
      "\t\t\techo h",
      "\t\t\t;;",
      "\t\t*)",
      "\t\t\techo \\$1",
      "\t\t\t;;",
      "\tesac",
      "\tshift",
      "done"
    ]
  },
  "$": {
    "prefix": "$",
    "description": "variable",
    "body": [
      "\"\\${$1}\""
    ]
  }
}
