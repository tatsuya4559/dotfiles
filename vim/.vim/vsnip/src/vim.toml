[[snippet]]
prefix = 'fn'
body = '''
function! $1($2) abort
	$3
endfunction
'''

[[snippet]]
prefix = 'def'
description = 'vim9 script function'
body = '''
def $1($2): $3
	$4
enddef
'''

[[snippet]]
prefix = 'utt'
description = 'table driven test'
body = '''
def Test$1(): void
	const tests = [
		{input: [$2], want: $3},
	]

	final child = themis#suite('Test$1')
	for tt in tests
		const description = printf('$1(%s)', tt.input)
		child[description] = function((input, want) => {
			const got = call($1, input)
			assert.equals(got, want)
		}, [tt.input, tt.want])
	endfor
enddef
suite.__Test$1__ = Test$1
'''

[[snippet]]
prefix = 'ut'
description = 'test'
body = '''
def Test$1(): void
	assert.equals(got, want)
enddef
suite.Test$1 = Test$1
'''

# vim: ts=2 noexpandtab
