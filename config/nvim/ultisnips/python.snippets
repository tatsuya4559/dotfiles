snippet ut "unittest"
class Test$1(unittest.TestCase):
    def setUp(self):
        pass

    def _callFUT(self, args):
        return func(args)

    def test_ok(self):
        pass
endsnippet

snippet jt "django test"
class Test$1(DjangoTest):
    def setUp(self):
        pass

    def _callFUT(self, args):
        return func(args)

    def test_ok(self):
        pass
endsnippet

snippet ase "assertEqual"
self.assertEqual($1)
endsnippet

snippet ast "assertTrue"
self.assertTrue($1)
endsnippet

snippet asf "assertFalse"
self.assertFalse($1)
endsnippet

snippet asr "assertRaises"
with self.assertRaises($1):
    $2
endsnippet

snippet asin "assertIsNone"
self.assertIsNone($1)
endsnippet

snippet asinn "assertIsNotNone"
self.assertIsNotNone($1)
endsnippet

snippet asi "assertIn"
self.assertIn($1)
endsnippet

snippet asni "assertNotIn"
self.assertNotIn($1)
endsnippet

snippet db.fetch "fetch rows"
from contextlib import closing
from django.db import connection
with closing(connection.cursor()) as cursor:
    cursor.execute(sql, [${1:param}])
    return dict_fetchall(cursor)
endsnippet

snippet pdb.trace "pdb breakpoint"
import pdb; pdb.set_trace()
endsnippet

snippet json.encode "json encode"
json.dumps($1)
endsnippet

snippet json.decode "json decode"
json.loads($1)
endsnippet
