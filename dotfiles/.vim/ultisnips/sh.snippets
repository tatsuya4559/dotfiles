snippet bash "bash shebang" b
#!/bin/bash
set -eu
endsnippet

snippet onexit "on exit function"
function on_exit() {
	$1
}

trap on_exit EXIT
endsnippet

snippet onerr "on error function"
function on_error() {
	$1
}

trap on_error ERR
endsnippet

snippet scriptdir "get directory where this script is"
`echo 'SCRIPT_DIR=$(cd $(dirname $0); pwd)'`
endsnippet

snippet whileread "while read"
while read -r col1 col2; do
	$1
done <<EOF
$2
EOF
endsnippet

snippet if "if statement"
if [[ $1 ]]; then
	$2
fi
endsnippet

snippet case "case statement"
case "${$1}" in
	*)
		$2
		;;
esac
endsnippet

snippet fn "function"
function $1() {
	$2
}
endsnippet

snippet log "logging function"
function log() {
	local severity="\$1"
	local message="\${@:2}"
	echo "[${severity}] ${message}" 1>&2
}
endsnippet

snippet retry "with retry function"
function with_retry() {
	local -r max_retry="\$1"
	local -r cmd="${@:2}"

	for retry_count in $(seq 0 ${max_retry}); do
		log INFO ${cmd} "retry_count=${retry_count}"
		${cmd} && return 0
	done

	log ERROR "max retry exceeded: ${cmd}"
	return 1
}
endsnippet

snippet lock "lock file"
# symlinkはすでに作成されている場合失敗するのでロックに使える
if ! ln -s $$ ./$$.lock; then
	echo locked
	exit 0
fi
endsnippet

snippet confirm "confirm"
read -p "Are you sure? (y/N): " YN
if [[ "${YN}" != 'y' ]]; then
	echo 'abort.' 1>&2
	exit 1
fi
endsnippet

snippet getopts "get options"
while getopts ${1:ho:} OPT; do
	case "${OPT}" in
		h)
			echo got help
			;;
		o)
			echo got $OPTARG
			;;
	esac
done
endsnippet

snippet opts "parse options"
while [[ $# -gt 0 ]]; do
	case "\$1" in
		-o | -o=*)
			if [[ \$1 =~ ^-o= ]]; then
				echo option o is ${1#*=}
			else
				echo option o is \$2
				shift
			fi
			;;
		-h)
			echo h
			;;
		*)
			echo \$1
			;;
	esac
	shift
done
endsnippet
